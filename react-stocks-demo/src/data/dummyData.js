// dummyTransactions:
///Starts with 3 pre-loaded past transactions
// is returned by the getDummyTransactions function
// is updated by the buyDummyStock function

const dummyOrders = [
  {
    created: new Date(6, 5, 2024),
    statusCode: "FILLED",
    ticker: "AMZN",
    type: "BUY",
    quantity: 10,
    price: 100.0,
  },
  {
    created: new Date(4, 4, 2024),
    statusCode: "FILLED",
    ticker: "TSLA",
    type: "BUY",
    quantity: 5,
    price: 240.0,
  },
  {
    created: new Date(28, 1, 2024),
    statusCode: "FILLED",
    ticker: "AAPL",
    type: "BUY",
    quantity: 2,
    price: 70.0,
  },
];

// OVERVIEW:
// return a log of historic Orders by the user, including the price of the stock when they purchased it.
// Will be replaced by a call to our backend with the following features:
// REQUEST TYPE: GET
// REQUEST URL: http://localhost:8080/Orders
// DATA SHAPE: array of transaction objects

export const getDummyOrders = () => {
  return dummyOrders; // returns the globally-defined dummyOrders array
};

// OVERIVIEW: List of stocks available to buy and their current prices.
// would come from 3rd party.

export const getDummyStocks = () => {
  const dummyStocks = [
    { ticker: "AMZN", price: 200.0 },
    { ticker: "TSLA", price: 250.0 },
    { ticker: "AAPL", price: 100.0 },
  ];

  return dummyStocks;
};

//OVERVIEW:
// buyDummyStock will write a new transaction to the backend.
// It currently recieves newTransID from React State, this parameter will be removed when we connect to back end.
// it calls getDummyStocks to find the current price of the stock being purchased.
//REQUEST URL: http://localhost:8080/Orders
//REQUEST TYPE: POST
//DATA SHAPE: transaction object with the following keys:
// - id: number -- should be generated by the backend, currently handled by React State
// - ticker: string
// - price: number
// - quantity: number
// - date: Date object

export const buyDummyStock = (ticker, quantity) => {
  //find the current rpice of the chosen stock
  const dummyStocks = getDummyStocks();
  const stock = dummyStocks.find((stock) => stock.ticker === ticker);

  const newDummyTransaction = {
    created: new Date(),
    statusCode: "PENDING",
    ticker: ticker,
    type: "BUY",
    quantity: quantity,
    price: stock.price,
  };

  dummyOrders.push(newDummyTransaction); // add the new transaction to the dummyOrders array. later we will change this to be a POST request to the backend

  console.log(dummyOrders);
  return newDummyTransaction;
};
